# -*- coding: utf-8 -*-

from termcolor import cprint
from random import randint


######################################################## Часть первая
#
# Создать модель жизни небольшой семьи.
#
# Каждый день участники жизни могут делать только одно действие.
# Все вместе они должны прожить год и не умереть.
#
# Муж может:
#   есть,
#   играть в WoT,
#   ходить на работу,
# Жена может:
#   есть,
#   покупать продукты,
#   покупать шубу,
#   убираться в доме,

# Все они живут в одном доме, дом характеризуется:
#   кол-во денег в тумбочке (в начале - 100)
#   кол-во еды в холодильнике (в начале - 50)
#   кол-во грязи (в начале - 0)
#
# У людей есть имя, степень сытости (в начале - 30) и степень счастья (в начале - 100).
#
# Любое действие, кроме "есть", приводит к уменьшению степени сытости на 10 пунктов
# Кушают взрослые максимум по 30 единиц еды, степень сытости растет на 1 пункт за 1 пункт еды.
# Степень сытости не должна падать ниже 0, иначе чел умрет от голода.
#
# Деньги в тумбочку добавляет муж, после работы - 150 единиц за раз.
# Еда стоит 10 денег 10 единиц еды. Шуба стоит 350 единиц.
#
# Грязь добавляется каждый день по 5 пунктов, за одну уборку жена может убирать до 100 единиц грязи.
# Если в доме грязи больше 90 - у людей падает степень счастья каждый день на 10 пунктов,
# Степень счастья растет: у мужа от игры в WoT (на 20), у жены от покупки шубы (на 60, но шуба дорогая)
# Степень счастья не должна падать ниже 10, иначе чел умирает от депрессии.
#
# Подвести итоги жизни за год: сколько было заработано денег, сколько сьедено еды, сколько куплено шуб.

class House:
    food = 50
    money = 100
    trash = 0

    def __init__(self):
        self.food = House.food
        self.money = House.money
        self.trash = House.trash

    def __str__(self):
        return 'В доме еды осталось {}, денег осталось {}, грязь {}'.format(
            House.food, House.money, House.trash)


class Human:
    house = House
    total_food = 0

    def __init__(self):
        self.name = None
        self.fullness = 30
        self.happiness = 100

    def eat(self):
        print('{}  ест'.format(self.name))
        self.fullness += 30
        self.house.food -= 30
        Human.total_food +=30

    def __str__(self):
        return 'Я - {}, сытость {}, счастье  {}'.format(self.name, self.fullness, self.happiness)


class Husband(Human):

    total_money = 0

    def __init__(self, name):
        super().__init__()
        self.name = name
        self.fullness = 30
        self.happiness = 100

    def act(self):
        if self.fullness <= 0 or self.house.trash > 100 or self.happiness <= 0:
            cprint('{} умер...'.format(self.name), color='red')
            return

        dice = randint(1, 6)
        if self.fullness < 30:
            self.eat()
        elif self.house.money <= 100:
            self.work()
        elif dice == 1:
            self.work()
        elif dice == 2:
            self.eat()
        else:
            self.gaming()

    def work(self):
        self.house.money += 150
        self.fullness -= 10
        Husband.total_money += 150
        cprint('{} сходил на работу'.format(self.name), color='blue')

    def gaming(self):

        self.fullness -= 10
        self.happiness += 20
        cprint('{} Поиграл в Танки'.format(self.name), color='yellow')


class Wife(Human):
    total_coat = 0

    def __init__(self, name):
        super().__init__()
        self.name = name
        self.fullness = 30
        self.happiness = 100

    def act(self):
        if self.fullness <= 0 or self.house.trash > 100 or self.happiness <= 0:
            cprint('{} умерла...'.format(self.name), color='red')
            return

        dice = randint(1, 6)
        if self.fullness < 30:
            self.eat()
        elif self.house.trash >= 80:
            self.clean_house()
        elif self.house.food < 60:
            self.shopping()
        elif self.house.money >= 400:
            self.buy_fur_coat()
        elif dice == 1:
            self.eat()
        elif dice == 2:
            self.shopping()

        else:
            self.eat()

    def shopping(self):
        self.house.food += 30
        self.fullness -= 10
        self.house.money -= self.house.food
        cprint('{} сходила в магазин'.format(self.name), color='magenta')

    def buy_fur_coat(self):
        self.happiness += 60
        self.house.money -= 350
        self.fullness -= 10
        Wife.total_coat +=1
        cprint('{} Купила шубу'.format(self.name), color='green')

    def clean_house(self):
        self.house.trash -= 50
        self.fullness -= 10
        cprint('{} Навела порядок в доме'.format(self.name), color='blue')


home = House()
serge = Husband(name='Сережа')
masha = Wife(name='Маша')

for day in range(365):
    cprint('================== День {} =================='.format(day), color='red')
    serge.act()
    masha.act()
    cprint(serge, color='cyan')
    cprint(masha, color='cyan')
    cprint(home, color='cyan')
    House.trash += 5

print('Всего заработано денег:', Husband.total_money)
print('Всего съедено еды:', Human.total_food)
print('Всего куплено шуб:', Wife.total_coat)
